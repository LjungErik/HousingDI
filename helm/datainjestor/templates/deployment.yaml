apiVersion: apps/v1
kind: Deployment
metadata:
  name: datainjestor
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable:  {{ max (sub .Values.replicaCount 1) 0 }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: datainjestor
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          env:
            - name: DATAINJESTOR_CONFIG_FILE
              value: /config/config.yml
            - name: CONFIGOR_SQL_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sql.secret }}
                  key: {{ .Values.sql.key }} 
            - name: CONFIGOR_MONGODB_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.secret }}
                  key: connection
            - name: CONFIGOR_MONGODB_DATABASENAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.secret }}
                  key: database
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: injestor-config